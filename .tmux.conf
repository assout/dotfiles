# Index {{{1
# Refs. <http://manpages.ubuntu.com/manpages/trusty/en/man1/tmux.1.html>
# Refs. <http://qiita.com/succi0303/items/cb396704493476373edf>
#
# TODOs
# - TODO: prefix+hogeとprefix+Ctrl+hogeを二重で定義していくのだるい
# }}}1

# Section; Setting Server Options {{{1
set -gs escape-time 0 # キーストロークのディレイを減らす
# }}}1

# Section; Setting Options {{{1
set -g prefix C-s # prefixキー変更する
set -g history-limit 10000 # 履歴数を変更
set -g default-terminal "screen-256color" # 256色端末を使用する
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

set -g set-clipboard on

# ステータスバーを設定する
set -g status-position bottom
set -g status-fg white
set -g status-bg black
set -g status-left-length 40
set -g status-left "#[fg=blue]Session:#S #[fg=green]Window:#I #[fg=yellow]Pain:#P "
# TODO: 重たそう。たまに表示乱れる。(この更新処理2プロセス動いてるっポイ)
# set -g status-right "#(now=`p`; if [[ \$now = Most* ]] ; then echo '#[bg=red]#[fg=black]'\$now; elif [[ \$now = *Completed* ]] ; then echo '#[bg=blue]#[fg=black]'\$now ; else echo \$now; fi) #[bg=white]#[fg=black] %Y/%m/%d(%a) %H:%M"
set -g status-right "#[bg=white]#[fg=black] %Y/%m/%d(%a) %H:%M"
set -g status-right-length 200
set -g status-interval 1

set -g visual-activity on
set -g mouse off # 暫定
# }}}1

# Section; Setting window options {{{1
setw -g window-status-fg green
setw -g window-status-bg default
setw -g window-status-attr default
# TODO: ちょいちょい複数アクティブっぽく見えちゃう
setw -g window-status-current-fg black
setw -g window-status-current-bg green
# TODO: ログインホスト(ssh,telent)名を表示したい @office
setw -g window-status-format "#I:#W#F "
setw -g window-status-current-format "#I:#W#F "

setw -g monitor-activity on
setw -g mode-keys vi # コピーモードの操作をvi風に設定する+クリップボード共有する
# }}}1

# Section; Key-bindings {{{1
bind C-s send-prefix

# Session bindings {{{2
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
# }}}2

# Window bindings {{{2
bind -n M-t new-window
bind -n M-h previous-window
bind -n M-l next-window
bind -n M-c confirm-before -p "kill-window #W? (y/n)" kill-window

# Note: Ctrl+sを送りたいことがあるため^sはbindしない
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
# }}}2

# Pane bindings {{{2
bind  h select-pane -L
bind ^h select-pane -L
bind  l select-pane -R
bind ^l select-pane -R
bind  j select-pane -D
bind ^j select-pane -D
bind  k select-pane -U
bind ^k select-pane -U

bind -r  < resize-pane -L 5
bind -r ^< resize-pane -L 5
bind -r  > resize-pane -R 5
bind -r ^> resize-pane -R 5
bind -r  - resize-pane -D 5
bind -r ^- resize-pane -D 5
bind -r  + resize-pane -U 5
bind -r ^+ resize-pane -U 5
bind  m resize-pane -Z
bind ^m resize-pane -Z
# ペインのレイアウトを切り替える(ペインサイズの均一化(vimの`<C-W>=`の代替) TODO: 完全な代替
bind -r  = next-layout
bind -r ^= next-layout

bind  c confirm-before -p "kill pane #P? (y/n)" kill-pane
bind ^c confirm-before -p "kill pane #P? (y/n)" kill-pane
bind  q confirm-before -p "kill pane #P? (y/n)" kill-pane
bind ^q confirm-before -p "kill pane #P? (y/n)" kill-pane
bind  o confirm-before -p "kill othre pane #P? (y/n)" "kill-pane -a"
bind ^o confirm-before -p "kill othre pane #P? (y/n)" "kill-pane -a"

# TODO できてないっぽい
bind H swap-pane -d -t {left-of}
bind L swap-pane -d -t {right-of}
bind J swap-pane -d -t {down-of}
bind K swap-pane -d -t {up-of}
# }}}2

# Other bindings {{{2
bind  r source-file ~/.tmux.conf \; display "Reloaded!"
bind ^r source-file ~/.tmux.conf \; display "Reloaded!"
# Copy mode settings
bind ^[ copy-mode # コピーモードに入る
bind -T copy-mode-vi v   send -X begin-selection # 選択を開始する
bind -T copy-mode-vi C-v send -X rectangle-toggle # TODO 挙動をVimに合わせる

bind -T copy-mode-vi y send -X copy-selection
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "win32yank.exe -i"
bind  ] run "win32yank.exe -o | tmux load-buffer - && tmux paste-buffer"
bind ^] run "win32yank.exe -o | tmux load-buffer - && tmux paste-buffer"

bind  p pipe-pane -o 'bash -c "while read -r LINE; do echo \"[\$(date +\"%%Y-%%m-%%dT%%H:%%M:%%S\")] \${LINE}\" >> \${HOME}/.tmux/log/term_\$(date +%Y%m%d_%H%M%S)_#S_#D.log; done "' \; display-message "Logging start."
bind ^p pipe-pane \; display-message "Logging end."
# }}}2
# }}}1

# Section; Setting Hooks {{{1
# }}}1

# Section; Setting Plugins {{{1
# set -g @plugin 'tmux-plugins/tmux-copycat' # TODO: msys2だと遅い
# set -g @plugin 'tmux-plugins/tmux-open' # Note: msys2でなんか動かないしあんま必要ないので使わない
# set -g @plugin 'tmux-plugins/tmux-logging' # 日付でないし、msys2でなんかコマンドがうまく出ないので、代替コマンドでやる

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'

# }}}1

# vim:nofoldenable:
